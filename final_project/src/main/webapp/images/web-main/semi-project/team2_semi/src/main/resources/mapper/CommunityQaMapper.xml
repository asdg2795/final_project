<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.team2.healthsns.mapper.CommunityQaMapper">

    <insert id="communityInsertQa">
        insert into board(title, content, userid, board_cat, cat, bodypart)
        values(#{title}, #{content}, #{userid}, #{board_cat}, #{cat}, #{bodypart});
    </insert>


    <select id="totalRecordQa">
        select count(post_id) from board
        where board_cat = 'qa'
        <if test="searchWord != null and searchWord != ''">
            AND title like CONCAT('%', #{searchWord}, '%')
        </if>
    </select>

    <select id="communitySelectQa" resultType="com.team2.healthsns.vo.CommunityVO">
        select post_id, title, userid, content, views, date_format(write_date,'%m-%d %h:%i') as write_date, bodypart
        from board
        where post_id = #{param1}
    </select>

    <update id="hitCountQa">
        update board
        set views = views + 1
        where post_id = #{param1}
    </update>

    <update id="communityUpdateQa">
        update board
        set title = #{title}, content = #{content}
        where post_id = #{post_id}
    </update>

    <update id="communityDeleteQa">
        delete from board
        where post_id = #{param1}
    </update>

    <select id="communityPageListQa" resultType="com.team2.healthsns.vo.CommunityVO">
        select b.post_id, b.title, b.userid, b.views, b.like, date_format(b.write_date,'%m-%d %h:%i') as write_date, b.cat, count(c.comment_id) as commentsCount, b.bodypart
        from board b
        left join comment c on b.post_id = c.target_post_id
        where board_cat = 'qa'
        <if test="searchWord != null and searchWord != ''">
            AND b.${searchKey} like '%${searchWord}%'
        </if>
        <if test="category == 1">
            AND b.cat = 'upper'
        </if>        
        <if test="category == 2">
            AND b.cat = 'lower'
        </if>  
        GROUP BY 
            b.post_id, b.title, b.userid, b.views, b.write_date, b.cat
        <choose>
            <when test="postSort == 2">
                ORDER BY b.like DESC
            </when>  
            <when test="postSort == 3">
                ORDER BY b.views DESC
            </when>  
            <otherwise>
                ORDER BY b.write_date DESC
            </otherwise>  
        </choose>
        limit ${onePageRecord}
        offset ${offsetPoint}
    </select>


</mapper>
